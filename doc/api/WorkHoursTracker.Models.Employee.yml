### YamlMime:ManagedReference
items:
- uid: WorkHoursTracker.Models.Employee
  commentId: T:WorkHoursTracker.Models.Employee
  id: Employee
  parent: WorkHoursTracker.Models
  children:
  - WorkHoursTracker.Models.Employee.#ctor
  - WorkHoursTracker.Models.Employee.CurrentTimeId
  - WorkHoursTracker.Models.Employee.EmployeeId
  - WorkHoursTracker.Models.Employee.JobTitle
  - WorkHoursTracker.Models.Employee.Name
  - WorkHoursTracker.Models.Employee.Surname
  - WorkHoursTracker.Models.Employee.Times
  langs:
  - csharp
  - vb
  name: Employee
  nameWithType: Employee
  fullName: WorkHoursTracker.Models.Employee
  type: Class
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Employee
    path: src/Models/Employee/Employee.cs
    startLine: 10
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  summary: "\nEmployee model \n"
  example: []
  syntax:
    content: public class Employee
    content.vb: Public Class Employee
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WorkHoursTracker.Models.Employee.#ctor
  commentId: M:WorkHoursTracker.Models.Employee.#ctor
  id: '#ctor'
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: Employee()
  nameWithType: Employee.Employee()
  fullName: WorkHoursTracker.Models.Employee.Employee()
  type: Constructor
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: .ctor
    path: src/Models/Employee/Employee.cs
    startLine: 16
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  summary: "\nEmployee constructor.\nCreating empty Times hash set\n"
  example: []
  syntax:
    content: public Employee()
    content.vb: Public Sub New
  overload: WorkHoursTracker.Models.Employee.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.EmployeeId
  commentId: P:WorkHoursTracker.Models.Employee.EmployeeId
  id: EmployeeId
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: EmployeeId
  nameWithType: Employee.EmployeeId
  fullName: WorkHoursTracker.Models.Employee.EmployeeId
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: EmployeeId
    path: src/Models/Employee/Employee.cs
    startLine: 22
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public int EmployeeId { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: 'Employee key, auto generated '
    content.vb: Public Property EmployeeId As Integer
  overload: WorkHoursTracker.Models.Employee.EmployeeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.Name
  commentId: P:WorkHoursTracker.Models.Employee.Name
  id: Name
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Employee.Name
  fullName: WorkHoursTracker.Models.Employee.Name
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Name
    path: src/Models/Employee/Employee.cs
    startLine: 25
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: >-
      [Required]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'Employee name '
    content.vb: >-
      <Required>

      Public Property Name As String
  overload: WorkHoursTracker.Models.Employee.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.Surname
  commentId: P:WorkHoursTracker.Models.Employee.Surname
  id: Surname
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: Surname
  nameWithType: Employee.Surname
  fullName: WorkHoursTracker.Models.Employee.Surname
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Surname
    path: src/Models/Employee/Employee.cs
    startLine: 29
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: >-
      [Required]

      public string Surname { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'Employee surname '
    content.vb: >-
      <Required>

      Public Property Surname As String
  overload: WorkHoursTracker.Models.Employee.Surname*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.JobTitle
  commentId: P:WorkHoursTracker.Models.Employee.JobTitle
  id: JobTitle
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: JobTitle
  nameWithType: Employee.JobTitle
  fullName: WorkHoursTracker.Models.Employee.JobTitle
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: JobTitle
    path: src/Models/Employee/Employee.cs
    startLine: 33
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: >-
      [Required]

      public string JobTitle { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'Employee job title '
    content.vb: >-
      <Required>

      Public Property JobTitle As String
  overload: WorkHoursTracker.Models.Employee.JobTitle*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.Times
  commentId: P:WorkHoursTracker.Models.Employee.Times
  id: Times
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: Times
  nameWithType: Employee.Times
  fullName: WorkHoursTracker.Models.Employee.Times
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Times
    path: src/Models/Employee/Employee.cs
    startLine: 37
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public ICollection<Time> Times { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{WorkHoursTracker.Models.Time}
      description: 'Collection of time for Employee '
    content.vb: Public Property Times As ICollection(Of Time)
  overload: WorkHoursTracker.Models.Employee.Times*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Employee.CurrentTimeId
  commentId: P:WorkHoursTracker.Models.Employee.CurrentTimeId
  id: CurrentTimeId
  parent: WorkHoursTracker.Models.Employee
  langs:
  - csharp
  - vb
  name: CurrentTimeId
  nameWithType: Employee.CurrentTimeId
  fullName: WorkHoursTracker.Models.Employee.CurrentTimeId
  type: Property
  source:
    remote:
      path: src/Models/Employee/Employee.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: CurrentTimeId
    path: src/Models/Employee/Employee.cs
    startLine: 40
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public int? CurrentTimeId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: 'Curent time id (if Employee currently working) '
    content.vb: Public Property CurrentTimeId As Integer?
  overload: WorkHoursTracker.Models.Employee.CurrentTimeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: WorkHoursTracker.Models
  commentId: N:WorkHoursTracker.Models
  name: WorkHoursTracker.Models
  nameWithType: WorkHoursTracker.Models
  fullName: WorkHoursTracker.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WorkHoursTracker.Models.Employee.#ctor*
  commentId: Overload:WorkHoursTracker.Models.Employee.#ctor
  name: Employee
  nameWithType: Employee.Employee
  fullName: WorkHoursTracker.Models.Employee.Employee
- uid: WorkHoursTracker.Models.Employee.EmployeeId*
  commentId: Overload:WorkHoursTracker.Models.Employee.EmployeeId
  name: EmployeeId
  nameWithType: Employee.EmployeeId
  fullName: WorkHoursTracker.Models.Employee.EmployeeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WorkHoursTracker.Models.Employee.Name*
  commentId: Overload:WorkHoursTracker.Models.Employee.Name
  name: Name
  nameWithType: Employee.Name
  fullName: WorkHoursTracker.Models.Employee.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WorkHoursTracker.Models.Employee.Surname*
  commentId: Overload:WorkHoursTracker.Models.Employee.Surname
  name: Surname
  nameWithType: Employee.Surname
  fullName: WorkHoursTracker.Models.Employee.Surname
- uid: WorkHoursTracker.Models.Employee.JobTitle*
  commentId: Overload:WorkHoursTracker.Models.Employee.JobTitle
  name: JobTitle
  nameWithType: Employee.JobTitle
  fullName: WorkHoursTracker.Models.Employee.JobTitle
- uid: WorkHoursTracker.Models.Employee.Times*
  commentId: Overload:WorkHoursTracker.Models.Employee.Times
  name: Times
  nameWithType: Employee.Times
  fullName: WorkHoursTracker.Models.Employee.Times
- uid: System.Collections.Generic.ICollection{WorkHoursTracker.Models.Time}
  commentId: T:System.Collections.Generic.ICollection{WorkHoursTracker.Models.Time}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Time>
  nameWithType: ICollection<Time>
  fullName: System.Collections.Generic.ICollection<WorkHoursTracker.Models.Time>
  nameWithType.vb: ICollection(Of Time)
  fullName.vb: System.Collections.Generic.ICollection(Of WorkHoursTracker.Models.Time)
  name.vb: ICollection(Of Time)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: WorkHoursTracker.Models.Time
    name: Time
    nameWithType: Time
    fullName: WorkHoursTracker.Models.Time
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: WorkHoursTracker.Models.Time
    name: Time
    nameWithType: Time
    fullName: WorkHoursTracker.Models.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: WorkHoursTracker.Models.Employee.CurrentTimeId*
  commentId: Overload:WorkHoursTracker.Models.Employee.CurrentTimeId
  name: CurrentTimeId
  nameWithType: Employee.CurrentTimeId
  fullName: WorkHoursTracker.Models.Employee.CurrentTimeId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

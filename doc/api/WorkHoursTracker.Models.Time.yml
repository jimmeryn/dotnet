### YamlMime:ManagedReference
items:
- uid: WorkHoursTracker.Models.Time
  commentId: T:WorkHoursTracker.Models.Time
  id: Time
  parent: WorkHoursTracker.Models
  children:
  - WorkHoursTracker.Models.Time.Employee
  - WorkHoursTracker.Models.Time.EmployeeId
  - WorkHoursTracker.Models.Time.EndDate
  - WorkHoursTracker.Models.Time.StartDate
  - WorkHoursTracker.Models.Time.TimeID
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: Time
  fullName: WorkHoursTracker.Models.Time
  type: Class
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Time
    path: src/Models/Time/Time.cs
    startLine: 9
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  summary: "\nTime model \n"
  example: []
  syntax:
    content: public class Time
    content.vb: Public Class Time
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WorkHoursTracker.Models.Time.TimeID
  commentId: P:WorkHoursTracker.Models.Time.TimeID
  id: TimeID
  parent: WorkHoursTracker.Models.Time
  langs:
  - csharp
  - vb
  name: TimeID
  nameWithType: Time.TimeID
  fullName: WorkHoursTracker.Models.Time.TimeID
  type: Property
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: TimeID
    path: src/Models/Time/Time.cs
    startLine: 12
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.None)]

      public int TimeID { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: 'Time Id '
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.None)>

      Public Property TimeID As Integer
  overload: WorkHoursTracker.Models.Time.TimeID*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Time.EmployeeId
  commentId: P:WorkHoursTracker.Models.Time.EmployeeId
  id: EmployeeId
  parent: WorkHoursTracker.Models.Time
  langs:
  - csharp
  - vb
  name: EmployeeId
  nameWithType: Time.EmployeeId
  fullName: WorkHoursTracker.Models.Time.EmployeeId
  type: Property
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: EmployeeId
    path: src/Models/Time/Time.cs
    startLine: 16
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: >-
      [ForeignKey("Employee")]

      public int EmployeeId { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: 'Employee id, foreign key '
    content.vb: >-
      <ForeignKey("Employee")>

      Public Property EmployeeId As Integer
  overload: WorkHoursTracker.Models.Time.EmployeeId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Employee
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Time.Employee
  commentId: P:WorkHoursTracker.Models.Time.Employee
  id: Employee
  parent: WorkHoursTracker.Models.Time
  langs:
  - csharp
  - vb
  name: Employee
  nameWithType: Time.Employee
  fullName: WorkHoursTracker.Models.Time.Employee
  type: Property
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Employee
    path: src/Models/Time/Time.cs
    startLine: 20
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public virtual Employee Employee { get; set; }
    parameters: []
    return:
      type: WorkHoursTracker.Models.Employee
      description: 'Employee asociated with time '
    content.vb: Public Overridable Property Employee As Employee
  overload: WorkHoursTracker.Models.Time.Employee*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: WorkHoursTracker.Models.Time.StartDate
  commentId: P:WorkHoursTracker.Models.Time.StartDate
  id: StartDate
  parent: WorkHoursTracker.Models.Time
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: Time.StartDate
  fullName: WorkHoursTracker.Models.Time.StartDate
  type: Property
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: StartDate
    path: src/Models/Time/Time.cs
    startLine: 23
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public DateTime StartDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: 'Time of work start '
    content.vb: Public Property StartDate As Date
  overload: WorkHoursTracker.Models.Time.StartDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Models.Time.EndDate
  commentId: P:WorkHoursTracker.Models.Time.EndDate
  id: EndDate
  parent: WorkHoursTracker.Models.Time
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: Time.EndDate
  fullName: WorkHoursTracker.Models.Time.EndDate
  type: Property
  source:
    remote:
      path: src/Models/Time/Time.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: EndDate
    path: src/Models/Time/Time.cs
    startLine: 26
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Models
  example: []
  syntax:
    content: public DateTime EndDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: 'Time of work end '
    content.vb: Public Property EndDate As Date
  overload: WorkHoursTracker.Models.Time.EndDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: WorkHoursTracker.Models
  commentId: N:WorkHoursTracker.Models
  name: WorkHoursTracker.Models
  nameWithType: WorkHoursTracker.Models
  fullName: WorkHoursTracker.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WorkHoursTracker.Models.Time.TimeID*
  commentId: Overload:WorkHoursTracker.Models.Time.TimeID
  name: TimeID
  nameWithType: Time.TimeID
  fullName: WorkHoursTracker.Models.Time.TimeID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WorkHoursTracker.Models.Time.EmployeeId*
  commentId: Overload:WorkHoursTracker.Models.Time.EmployeeId
  name: EmployeeId
  nameWithType: Time.EmployeeId
  fullName: WorkHoursTracker.Models.Time.EmployeeId
- uid: WorkHoursTracker.Models.Time.Employee*
  commentId: Overload:WorkHoursTracker.Models.Time.Employee
  name: Employee
  nameWithType: Time.Employee
  fullName: WorkHoursTracker.Models.Time.Employee
- uid: WorkHoursTracker.Models.Employee
  commentId: T:WorkHoursTracker.Models.Employee
  parent: WorkHoursTracker.Models
  name: Employee
  nameWithType: Employee
  fullName: WorkHoursTracker.Models.Employee
- uid: WorkHoursTracker.Models.Time.StartDate*
  commentId: Overload:WorkHoursTracker.Models.Time.StartDate
  name: StartDate
  nameWithType: Time.StartDate
  fullName: WorkHoursTracker.Models.Time.StartDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: WorkHoursTracker.Models.Time.EndDate*
  commentId: Overload:WorkHoursTracker.Models.Time.EndDate
  name: EndDate
  nameWithType: Time.EndDate
  fullName: WorkHoursTracker.Models.Time.EndDate

### YamlMime:ManagedReference
items:
- uid: WorkHoursTracker.Test.Stats
  commentId: T:WorkHoursTracker.Test.Stats
  id: Stats
  parent: WorkHoursTracker.Test
  children:
  - WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest
  - WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest
  - WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: Stats
  fullName: WorkHoursTracker.Test.Stats
  type: Class
  source:
    remote:
      path: tests/Stats.test.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: Stats
    path: tests/Stats.test.cs
    startLine: 26
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Test
  summary: "\nStats class tests\n<xref href=\"WorkHoursTracker.Views.StatsView\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public class Stats
    content.vb: Public Class Stats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest
  commentId: M:WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest
  id: TimeSpanToHoursBasicTest
  parent: WorkHoursTracker.Test.Stats
  langs:
  - csharp
  - vb
  name: TimeSpanToHoursBasicTest()
  nameWithType: Stats.TimeSpanToHoursBasicTest()
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest()
  type: Method
  source:
    remote:
      path: tests/Stats.test.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: TimeSpanToHoursBasicTest
    path: tests/Stats.test.cs
    startLine: 46
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Test
  syntax:
    content: >-
      [Fact]

      public void TimeSpanToHoursBasicTest()
    content.vb: >-
      <Fact>

      Public Sub TimeSpanToHoursBasicTest
  overload: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest
  commentId: M:WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest
  id: TimeSpanToHoursBasicZeroTest
  parent: WorkHoursTracker.Test.Stats
  langs:
  - csharp
  - vb
  name: TimeSpanToHoursBasicZeroTest()
  nameWithType: Stats.TimeSpanToHoursBasicZeroTest()
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest()
  type: Method
  source:
    remote:
      path: tests/Stats.test.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: TimeSpanToHoursBasicZeroTest
    path: tests/Stats.test.cs
    startLine: 53
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Test
  syntax:
    content: >-
      [Fact]

      public void TimeSpanToHoursBasicZeroTest()
    content.vb: >-
      <Fact>

      Public Sub TimeSpanToHoursBasicZeroTest
  overload: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest
  commentId: M:WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest
  id: TimeSpanToStringBasicTest
  parent: WorkHoursTracker.Test.Stats
  langs:
  - csharp
  - vb
  name: TimeSpanToStringBasicTest()
  nameWithType: Stats.TimeSpanToStringBasicTest()
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest()
  type: Method
  source:
    remote:
      path: tests/Stats.test.cs
      branch: master
      repo: git@github.com:jimmeryn/dotnet.git
    id: TimeSpanToStringBasicTest
    path: tests/Stats.test.cs
    startLine: 60
  assemblies:
  - WorkHoursTracker
  namespace: WorkHoursTracker.Test
  syntax:
    content: >-
      [Fact]

      public void TimeSpanToStringBasicTest()
    content.vb: >-
      <Fact>

      Public Sub TimeSpanToStringBasicTest
  overload: WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: WorkHoursTracker.Views.StatsView
  commentId: T:WorkHoursTracker.Views.StatsView
  name: StatsView
  nameWithType: StatsView
  fullName: WorkHoursTracker.Views.StatsView
- uid: WorkHoursTracker.Test
  commentId: N:WorkHoursTracker.Test
  name: WorkHoursTracker.Test
  nameWithType: WorkHoursTracker.Test
  fullName: WorkHoursTracker.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest*
  commentId: Overload:WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest
  name: TimeSpanToHoursBasicTest
  nameWithType: Stats.TimeSpanToHoursBasicTest
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicTest
- uid: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest*
  commentId: Overload:WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest
  name: TimeSpanToHoursBasicZeroTest
  nameWithType: Stats.TimeSpanToHoursBasicZeroTest
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToHoursBasicZeroTest
- uid: WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest*
  commentId: Overload:WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest
  name: TimeSpanToStringBasicTest
  nameWithType: Stats.TimeSpanToStringBasicTest
  fullName: WorkHoursTracker.Test.Stats.TimeSpanToStringBasicTest
